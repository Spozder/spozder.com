doctype html
html
	head
		title Custom Countdown
		== slim :"partials/global_header"
		link rel="stylesheet" href="/style/countdown"

	body
		#background

		#content
			span id="days-count-div" class="days count down"
				span id="days-current-top" class="current top"
				span id="days-next-top" class="next top"
				span id="days-current-bottom" class="current bottom"
				span id="days-next-bottom" class="next bottom"
				br
				h2 Days
			span id="hours-count-div" class="hours count down"
				span id="hours-current-top" class="current top"
				span id="hours-next-top" class="next top"
				span id="hours-current-bottom" class="current bottom"
				span id="hours-next-bottom" class="next bottom"
				br
				h2 Hours
			span id="mins-count-div" class="mins count down"
				span id="mins-current-top" class="current top"
				span id="mins-next-top" class="next top"
				span id="mins-current-bottom" class="current bottom"
				span id="mins-next-bottom" class="next bottom"
				br
				h2 Minutes
			span id="secs-count-div" class="secs count down"
				span id="secs-current-top" class="current top"
				span id="secs-next-top" class="next top"
				span id="secs-current-bottom" class="current bottom"
				span id="secs-next-bottom" class="next bottom"
				br
				h2 Seconds

		#sharebutton
			button id="share-button" class="btn btn-dark btn-lg" Share

		javascript:
			function webshareFallback() {
				if (navigator.clipboard) {
					// Copy webpage link to clipboard
					navigator.clipboard.writeText(window.location.href).then(() => {
						alert("Page url copied to clipboard");
					});
				} else {
					alert("Sharing not yet available on your device");
				}
			}

			document.getElementById("share-button").addEventListener('click', event => {
				if ('share' in navigator) {
					// Mobile share navigator
					navigator.share({
						title: 'Custom Countdown',
						url: window.location.href
					}).then(() => {
						console.log("Shared!");
					}).catch(error => {
						console.error(error);
						webshareFallback();
					});
				} else {
					webshareFallback();
				}
			});
		
		javascript:
			var bgElement = document.getElementById("background");
			bgElement.style.backgroundSize = "#{@background_style}";
			console.log(bgElement.style);
			if (window.innerWidth > window.innerHeight) {
				bgElement.style.backgroundImage = "url(#{@background_images[:h]})";
			} else {
				bgElement.style.backgroundImage = "url(#{@background_images[:v]})";
			}
			
			window.addEventListener("orientationchange", function() {
			if (window.orientation === 90) {
				bgElement.style.backgroundImage = "url(#{@background_images[:h]})";
			} else {
				bgElement.style.backgroundImage = "url(#{@background_images[:v]})";
			}
			}, false);

		javascript:
			function endCountdown() {
				document.getElementById("content").innerHTML = "<h1>#{@message}</h1>";
			}

			function main() {
				var countdownDate = new Date("#{@countdown_to}").getTime();
				console.log(new Date("#{@countdown_to}"));

				var secondsDiff = countdownDate - (new Date().getTime());
				if (secondsDiff < 0) {
					endCountdown();
					return;
				}

				var timeObjs = [
					{name: "days", val: Math.floor(secondsDiff / (1000 * 60 * 60 * 24)) + 1},
					{name: "hours", val: Math.floor((secondsDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)) + 1},
					{name: "mins", val: Math.floor((secondsDiff % (1000 * 60 * 60)) / (1000 * 60)) + 1},
					{name: "secs", val: Math.floor((secondsDiff % (1000 * 60)) / 1000) + 1}
				];

				var newDaysVal = 0;
				var newHoursVal = 0;
				var newMinsVal = 0;
				var newSecsVal = 0;

				timeObjs = timeObjs.map(function(timeObj) {
					return {
						...timeObj,
						container: document.getElementById(timeObj.name + "-count-div"),
						currentSpans: [
							document.getElementById(timeObj.name + "-current-top"),
							document.getElementById(timeObj.name + "-current-bottom")
						],
						nextSpans: [
							document.getElementById(timeObj.name + "-next-top"),
							document.getElementById(timeObj.name + "-next-bottom")
						]
					}
				});

				function setupAnimation(timeObj, nextVal) {
					var currentVal = timeObj.val;
					for (var i = 0; i < 2; i++) {
						timeObj.currentSpans[i].textContent = currentVal;
						timeObj.nextSpans[i].textContent = nextVal;
						if (currentVal >= 10) {
							timeObj.currentSpans[i].classList.add('small');
						} else {
							timeObj.currentSpans[i].classList.remove('small');
						}

						if (nextVal >= 10) {
							timeObj.nextSpans[i].classList.add('small');
						} else {
							timeObj.nextSpans[i].classList.remove('small');
						}
					}

					timeObj.container.classList.remove('changed');
				};

				function executeAnimation(timeObj) {
					timeObj.container.classList.add('changing');
				};

				function finishAnimation(timeObj) {
					timeObj.container.classList.add('changed');
					timeObj.container.classList.remove('changing');
				};

				function update(timeObj, newVal) {
					setupAnimation(timeObj, newVal);
					setTimeout(function() {
						executeAnimation(timeObj);
					}, 20);
					setTimeout(function() {
						finishAnimation(timeObj);
					}, 900);
				};

				var x = setInterval(function() {
					secondsDiff = countdownDate - (new Date().getTime());
					if (secondsDiff < 0) {
						endCountdown();
						return;
					}

					newDaysVal = Math.floor(secondsDiff / (1000 * 60 * 60 * 24));
					newHoursVal = Math.floor((secondsDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
					newMinsVal = Math.floor((secondsDiff % (1000 * 60 * 60)) / (1000 * 60));
					newSecsVal = Math.floor((secondsDiff % (1000 * 60)) / 1000);

					daysObj = timeObjs[0];
					hoursObj = timeObjs[1];
					minsObj = timeObjs[2];
					secsObj = timeObjs[3];

					if (newDaysVal !== daysObj.val) {
						update(daysObj, newDaysVal);
						daysObj.val = newDaysVal;
					}

					if (newHoursVal !== hoursObj.val) {
						update(hoursObj, newHoursVal);
						hoursObj.val = newHoursVal;
					}

					if (newMinsVal !== minsObj.val) {
						update(minsObj, newMinsVal);
						minsObj.val = newMinsVal;
					}

					update(secsObj, newSecsVal);
					secsObj.val = newSecsVal;

					if (secondsDiff < 0) {
							clearInterval(x);
					}
				}, 1000);
			}

			main();